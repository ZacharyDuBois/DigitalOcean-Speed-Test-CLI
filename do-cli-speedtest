#!/bin/bash
# DigitalOcean Speed Test CLI
# (c) Copyright Zachary DuBois, 2014. All rights reserved.
version="v0.5.1 100MB"

##
# Variables
##

downloadFile="100mb.test"
dataCenters=(speedtest-{ams{1..2},nyc{1..2},lon1,sfo1,sgp1}.digitalocean.com)
userAgent="DigitalOcean Speed Test CLI $version - https://bitbucket.org/Zachary_DuBois/digitalocean-speed-test-cli"


##
# Message Types
##

fail="[$(tput setaf 1)FAIL$(tput sgr0)]"
ok="[$(tput setaf 2)OK$(tput sgr0)]"
running="[$(tput setaf 3)*$(tput sgr0)]"
notice="[$(tput setaf 3)NOTICE$(tput sgr0)]"
warning="[$(tput setaf 3)WARNING$(tput sgr0)]"
info="[$(tput setaf 6)INFO$(tput sgr0)]"
finish="[$(tput setaf 4)DONE$(tput sgr0)]"


##
# Startup Checks
##

# Check for root
if [ "$(id -u)" == "0" ]
then
  echo "$fail Do not run this script as root."
  exit 1
fi

# Check for wget
which wget > /dev/null
checkForWget=$?
if [ "$checkForWget" != "0" ]
then 
  echo "$fail You need wget to run this script."
  exit 1
fi


##
# Start
##

echo
echo "Welcome to the DigitalOcean Speed Test CLI $version."
echo "(c) Copyright Zachary DuBois, 2014. All rights reserved."
echo "Source is available here: https://bitbucket.org/Zachary_DuBois/digitalocean-speed-test-cli"
echo


##
# Download Test
##

echo "$notice All test files are not saved so you don't have to worry about disk space :P"
echo "$running Starting download speedtest..."

downloadTest() {
  name=$1
  hostname=$2
  
  echo "$running Running $name download speed test from http://$hostName/$downloadFile..."
  speedRaw=$( wget -O /dev/null --user-agent "'$userAgent'" http://$hostname/$downloadFile 2>&1 | awk '/\/dev\/null/ {speed=$3 $4} END {gsub(/\(|\)/,"",speed); print speed}' )
  speed="$(tput setaf 2)$speedRaw$(tput sgr0)"
  echo "$ok $name Speed: $speed."
}

for dataCenter in "${dataCenters[@]}"
do
    downloadTest "$(echo "$dataCenter" | awk -F'.' '{ print $1 }' | awk -F'-' '{ print $2 }' | tr '[:lower:]' '[:upper:]')" "$dataCenter"
done

echo "$ok Download Speedtest."


##
# Latency Test
##

echo "$running Starting latency test..."
echo "$info This test each datacenter 10 times."
echo "$info If there is any packet loss, it will be printed."

pingTest() {
  name=$1
  hostname=$2
  echo "$running Running $name latency test on $hostname..."
  pingRaw=$(ping -qc 10 -i 0.5 $hostname)
  avgPingRaw="$(echo "$pingRaw" | awk -F'/' '/^(rtt|round-trip)/ { print $5 }')"
  avgPing="$(tput setaf 2)"$avgPingRaw"ms$(tput sgr0)"
  echo "$ok $name Average Latency: $avgPing."
  pkLossRaw="$(echo "$pingRaw" | awk -F',' '/packet loss/ { print $3 }' | awk -F' ' '{ print $1 }')"
  if ! [[ "$pkLossRaw" =~ ^(0\.0\%|0\%) ]]
  then
    pkLoss=$(tput setaf 2)$pkLossRaw$(tput sgr0)
    echo "$warning $name Packet Loss: $pkLoss."
  fi
}

for dataCenter in "${dataCenters[@]}"
do
    pingTest "$(echo "$dataCenter" | awk -F'.' '{ print $1 }' | awk -F'-' '{ print $2}' | tr '[:lower:]' '[:upper:]')" "$dataCenter"
done

echo "$ok Latency test."


##
# Done
##

echo
echo "$finish Test complete."

exit 0
